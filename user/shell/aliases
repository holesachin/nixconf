
export PATH=$PATH:${HOME}/.local/scripts

# start tmux
if [[ -z "$TMUX" ]]; then
    tmux -u attach -t nix >/dev/null || tmux -u new -s nix 
fi

# eniviroment variables = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
export EDITOR='nvim'


# android studio
# export ANDROID_HOME=$HOME/Android/Sdk
# export PATH=$PATH:$ANDROID_HOME/emulator
# export PATH=$PATH:$ANDROID_HOME/platform-tools
# export PATH=$PATH:/opt/android-studio/bin 

# aliases = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

# aliaces 
alias fzf='fzf --border bold'
alias rm='trash'
alias del='/bin/rm -rf'
# alias lf='lfub'
alias bin='$HOME/.local/bin'

alias cat='bat -p'

# vim == nvim
alias vim='nvim'

#list
alias ls='ls --color=auto'
alias la='ls -a'
alias ll='ls -alFh'
alias l.="ls -A | egrep '^\.'"
alias listdir="ls -d */ > list"

alias aria2cd='aria2c -c -s 11 -x 11 -k 1M -j 11 '

# copy with rsync
alias rcp='rsync -a --progress'

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# scan wifi 
swifi() { 
    nmcli device wifi rescan && nmcli device wifi list 
}

cwifi() {
     if [ ${*} ] ; then
        nmcli device wifi connect "${*}"
    else
        nmcli device wifi connect $(swifi | tail -n +2 |  gum choose | tr '*' ' ' | awk '{print $2}')
    fi
}

# short functions

# Create and go to the directory
mkdirg ()
{
    mkdir -p $1
    cd $1
}

# vim switcher
# for nv in $(find ${HOME}/.config/nvim -maxdepth 1 -type d | tail -n +2 | xargs -I '{}' basename {}); do
# 	eval "alias nvim-${nv}='NVIM_APPNAME=nvim/${nv}'"
# done
# 
# export NVIM_APPNAME='nvim'
# 
# function nvims() {
#   items=$(find ${HOME}/.config/nvim -maxdepth 1 -type d | tail -n +2 | xargs -I '{}' basename {})
#   config=nvim/$(printf "%s\n" "${items[@]}" | fzf --prompt=" Neovim Config  " --height=~50% --layout=reverse --border --exit-0)
#   if [[ -z $config ]]; then
#     echo "Nothing selected"
#     return 0
#   elif [[ $config == "default" ]]; then
#     config="nvim/default"
#   fi
#   NVIM_APPNAME=$config nvim $@
# }

# bindkey -s ^a "nvims\n"

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# key bindings

bindkey -s ^n "nvim\n"

